#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    macros {
        flash_macro: flash_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bootloader>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };

        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
        };

        rgb_encoder: rgb_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_ENCODER";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };

        scroll_encoder: scroll_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <30>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <13 14>;
        };

        left_bkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <17 16>;
        };

        right_bkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <21 22>;
        };

        left_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <29 30>;
        };

        right_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <34 35>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <42 43>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <47 48>;
        };

        bac {
            bindings = <&kp BACKSLASH>;
            key-positions = <18 20>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <31 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Qwery {
            bindings = <
&kp ESCAPE       &kp N1        &kp N2        &kp N3            &kp N4      &kp N5          &kp UP_ARROW     &kp N6        &kp N7        &kp N8               &kp N9                   &kp N0               &as PIPE BACKSLASH
&as TILDE GRAVE  &kp Q         &kp W         &kp E             &kp R       &kp T           &kp DOWN_ARROW   &kp Y         &kp U         &kp I                &kp O                    &kp P                &kp BACKSPACE
&kp TAB          &kp A         &kp S         &kp D             &kp F       &kp G           &kp LEFT_ARROW   &kp H         &kp J         &kp K                &kp L                    &as COLON SEMICOLON  &as DOUBLE_QUOTES SQT
&kp LSHFT        &kp Z         &kp X         &kp C             &kp V       &kp B           &kp RIGHT_ARROW  &kp N         &kp M         &as LESS_THAN COMMA  &as GREATER_THAN PERIOD  &as QUESTION SLASH   &kp LEFT_SHIFT
&to 5            &kp LEFT_ALT  &kp LEFT_WIN  &kp LEFT_CONTROL  &ltq 1 TAB  &ltq 3 ENTER    &to 6            &ltq 3 SPACE  &ltq 2 ENTER  &kp RIGHT_ALT        &kp RIGHT_WIN            &kp RCTRL
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "Qwery";
        };

        bluetooth {
            bindings = <
&trans  &bt BT_CLR_ALL   &bt BT_SEL 0    &bt BT_SEL 1      &bt BT_SEL 2     &bt BT_SEL 3         &trans  &trans                          &trans    &trans        &trans           &trans    &trans
&trans  &trans           &trans          &trans            &kp K_MUTE       &kp C_VOLUME_UP      &trans  &trans                          &trans    &trans        &trans           &trans    &trans
&trans  &kp LEFT_GUI     &kp LEFT_ALT    &kp LEFT_CONTROL  &kp LEFT_SHIFT   &kp C_VOLUME_DOWN    &trans  &kp LEFT                        &kp DOWN  &kp UP_ARROW  &kp RIGHT_ARROW  &kp HOME  &kp PAGE_UP
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF   &rgb_ug RGB_BRI  &rgb_ug RGB_BRD      &trans  &rgb_ug RGB_COLOR_HSB(0,0,100)  &trans    &trans        &trans           &kp END   &kp PAGE_DOWN
&trans  &trans           &trans          &trans            &trans           &trans               &trans  &trans                          &trans    &trans        &trans           &trans
            >;

            label = "Navi";
        };

        Symbol {
            bindings = <
&trans  &trans           &trans        &trans        &trans          &trans             &trans  &trans            &trans             &trans         &trans                &trans                 &trans
&trans  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4    &kp N5             &trans  &kp NUMBER_6      &kp N7             &kp N8         &kp N9                &kp N0                 &kp DELETE
&trans  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR      &kp PERCENT        &trans  &kp LCTRL         &kp AMPERSAND      &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE
&trans  &kp EQUAL        &kp MINUS     &kp PLUS      &kp LEFT_BRACE  &kp RIGHT_BRACE    &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMICOLON  &kp COLON             &kp NON_US_BACKSLASH   &kp TILDE
&trans  &trans           &trans        &trans        &trans          &trans             &trans  &trans            &trans             &trans         &trans                &trans
            >;

            label = "Symbol";
        };

        FUNCTION {
            bindings = <
&trans     &trans     &trans          &trans          &trans        &trans             &trans  &trans       &trans     &trans     &trans     &trans           &trans
&kp LG(Q)  &kp F1     &kp F2          &kp F3          &kp F4        &kp F5             &trans  &kp F6       &kp F7     &kp F8     &kp F9     &kp F10          &kp F11
&trans     &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT    &trans  &bootloader  &mkp LCLK  &mkp MCLK  &mkp RCLK  &kp PRINTSCREEN  &kp F12
&trans     &kp LG(Z)  &kp LG(X)       &kp LG(C)       &kp LG(V)     &kp LEFT_BRACE     &trans  &trans       &kp F1     &kp F2     &kp F3     &kp F4           &trans
&trans     &trans     &trans          &trans          &trans        &trans             &trans  &trans       &trans     &trans     &trans     &trans
            >;

            label = "MOUSE";
        };

        Flash {
            bindings = <
&flash_macro  &trans  &trans  &trans  &trans  &trans    &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&trans        &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans        &trans        &trans        &trans        &trans
&trans        &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans        &trans        &trans        &trans        &trans
&trans        &trans  &trans  &trans  &trans  &trans    &trans  &bt BT_CLR    &trans        &trans        &trans        &trans        &bt BT_CLR_ALL
&trans        &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans        &trans        &trans        &trans
            >;

            display-name = "Flash";
        };

        Rgb {
            bindings = <
&ext_power EP_TOG  &trans  &trans  &trans  &trans           &rgb_ug RGB_SPI    &rgb_ug RGB_HUI  &rgb_ug RGB_SPD  &trans           &trans  &trans  &trans  &trans
&trans             &trans  &trans  &trans  &rgb_ug RGB_BRI  &rgb_ug RGB_EFR    &rgb_ug RGB_HUD  &rgb_ug RGB_EFF  &rgb_ug RGB_BRD  &trans  &trans  &trans  &trans
&trans             &trans  &trans  &trans  &trans           &trans             &rgb_ug RGB_SAI  &trans           &trans           &trans  &trans  &trans  &trans
&trans             &trans  &trans  &trans  &trans           &trans             &rgb_ug RGB_SAD  &trans           &trans           &trans  &trans  &trans  &trans
&to 0              &trans  &trans  &trans  &trans           &trans             &rgb_ug RGB_TOG  &trans           &trans           &trans  &trans  &trans
            >;

            label = "Rgb";
            sensor-bindings = <&rgb_encoder &scroll_encoder>;
        };

        Mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans     &trans       &mmv MOVE_UP     &trans     &trans          &trans          &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans     &trans       &mmv MOVE_DOWN   &trans     &trans          &mmv MOVE_UP    &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans     &trans       &mmv MOVE_LEFT   &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans     &trans       &mmv MOVE_RIGHT  &trans     &trans          &trans          &trans           &trans  &trans
&trans  &trans  &trans  &trans  &mkp LCLK  &mkp RCLK    &to 0            &mkp LCLK  &mkp RCLK       &trans          &trans           &trans
            >;

            label = "Mouse";
            sensor-bindings = <&scroll_encoder>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Flash {
            if-layers = <4 4>;
            then-layer = <4>;
        };
    };
};
